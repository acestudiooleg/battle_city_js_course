import { Tank } from './Tank.js';
import { logger } from './main.js';

/**
 * üéÆ –ö–ª–∞—Å Enemy - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≤–æ—Ä–æ–≥–∞
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –ª–æ–≥—ñ–∫—É –≤–æ—Ä–æ–≥–∞
 * - –®–Ü –≤–æ—Ä–æ–≥–∞
 */

export class Enemy extends Tank {
    constructor(options = {}) {
        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–ª–∞—Å—É
        super({
            ...options,
            color: options.color || '#e74c3c', // –ß–µ—Ä–≤–æ–Ω–∏–π –∫–æ–ª—ñ—Ä –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            speed: options.speed || 1, // –í–æ—Ä–æ–≥ —Ä—É—Ö–∞—î—Ç—å—Å—è –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ
            direction: options.direction || 'down'
        });
        
        // –¢–∞–π–º–µ—Ä –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞–ø—Ä—è–º–∫—É
        this.directionChangeTimer = 0;
        this.directionChangeInterval = 2000; // 2 —Å–µ–∫—É–Ω–¥–∏
        
        logger.enemyAction('–í–æ—Ä–æ–≥ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π', `–ø–æ–∑–∏—Ü—ñ—è: (${this.x}, ${this.y})`);
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≤–æ—Ä–æ–≥–∞
     * –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –∫–∞–¥—Ä
     */
    update(deltaTime) {
        if (!this.isAlive) return;
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –∑–º—ñ–Ω–∏ –Ω–∞–ø—Ä—è–º–∫—É
        this.directionChangeTimer += deltaTime;
        
        // –ó–º—ñ–Ω—é—î–º–æ –Ω–∞–ø—Ä—è–º–æ–∫ –∫–æ–∂–Ω—ñ 2 —Å–µ–∫—É–Ω–¥–∏
        if (this.directionChangeTimer >= this.directionChangeInterval) {
            this.changeDirection();
            this.directionChangeTimer = 0;
        }
    }
    
    /**
     * –ó–º—ñ–Ω–∞ –Ω–∞–ø—Ä—è–º–∫—É —Ä—É—Ö—É –≤–æ—Ä–æ–≥–∞
     */
    changeDirection() {
        const directions = ['up', 'down', 'left', 'right'];
        const randomIndex = Math.floor(Math.random() * directions.length);
        this.direction = directions[randomIndex];
        
        logger.enemyAction('–ó–º—ñ–Ω–∞ –Ω–∞–ø—Ä—è–º–∫—É', this.direction);
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –≤–æ—Ä–æ–≥–∞ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     * @param {CanvasRenderingContext2D} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
     */
    render(ctx) {
        if (!this.isAlive) return;
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        ctx.save();
        
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤–µ –º–∞–ª—é–≤–∞–Ω–Ω—è –∑ Tank
        super.render(ctx);
        
        // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤–æ—Ä–æ–≥–∞
        this.drawEnemyMark(ctx);
        
        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        ctx.restore();
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –ø–æ–∑–Ω–∞—á–∫–∏ –≤–æ—Ä–æ–≥–∞ (—á–µ—Ä–≤–æ–Ω–∏–π —Ö—Ä–µ—Å—Ç–∏–∫)
     * @param {CanvasRenderingContext2D} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
     */
    drawEnemyMark(ctx) {
        const markSize = 6;
        const centerX = this.x + this.width / 2;
        const centerY = this.y + this.height / 2;
        
        // –ú–∞–ª—é—î–º–æ —á–µ—Ä–≤–æ–Ω–∏–π —Ö—Ä–µ—Å—Ç–∏–∫
        ctx.strokeStyle = '#c0392b';
        ctx.lineWidth = 2;
        
        // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è
        ctx.beginPath();
        ctx.moveTo(centerX, centerY - markSize);
        ctx.lineTo(centerX, centerY + markSize);
        ctx.stroke();
        
        // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è
        ctx.beginPath();
        ctx.moveTo(centerX - markSize, centerY);
        ctx.lineTo(centerX + markSize, centerY);
        ctx.stroke();
    }
    
    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–æ—Ä–æ–≥ –∂–∏–≤–∏–π
     * @returns {boolean} - true —è–∫—â–æ –≤–æ—Ä–æ–≥ –∂–∏–≤–∏–π
     */
    isEnemyAlive() {
        return this.isTankAlive();
    }
    
    /**
     * –í–±–∏—Ç–∏ –≤–æ—Ä–æ–≥–∞
     */
    kill() {
        super.kill();
        logger.enemyAction('–í–æ—Ä–æ–≥ –≤–±–∏—Ç–∏–π');
    }
    
    /**
     * –í—ñ–¥—Ä–æ–¥–∏—Ç–∏ –≤–æ—Ä–æ–≥–∞
     */
    respawn() {
        super.respawn();
        logger.enemyAction('–í–æ—Ä–æ–≥ –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–∏–π!');
    }
} 