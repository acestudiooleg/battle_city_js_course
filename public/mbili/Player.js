import { Tank } from './Tank.js';
import { logger } from './main.js';

/**
 * üéÆ –ö–ª–∞—Å Player - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≥—Ä–∞–≤—Ü—è
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –ª–æ–≥—ñ–∫—É –≥—Ä–∞–≤—Ü—è
 * - –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü–µ–º
 */

export class Player extends Tank {
    constructor(options = {}) {
        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–ª–∞—Å—É
        super({
            ...options,
            color: options.color || '#f1c40f', // –ñ–æ–≤—Ç–∏–π –∫–æ–ª—ñ—Ä –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            speed: options.speed || 2, // –ì—Ä–∞–≤–µ—Ü—å —Ä—É—Ö–∞—î—Ç—å—Å—è —à–≤–∏–¥—à–µ
            direction: options.direction || 'up'
        });
        
        logger.playerAction('–ì—Ä–∞–≤–µ—Ü—å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π', `–ø–æ–∑–∏—Ü—ñ—è: (${this.x}, ${this.y})`);
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≥—Ä–∞–≤—Ü—è
     * –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –∫–∞–¥—Ä
     */
    update(deltaTime) {
        // –ü–æ–∫–∏ —â–æ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å
        // –í –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —É—Ä–æ–∫–∞—Ö —Ç—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ —Ä—É—Ö—É
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü—è –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     * @param {CanvasRenderingContext2D} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
     */
    render(ctx) {
        if (!this.isAlive) return;
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        ctx.save();
        
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤–µ –º–∞–ª—é–≤–∞–Ω–Ω—è –∑ Tank
        super.render(ctx);
        
        // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≥—Ä–∞–≤—Ü—è
        this.drawPlayerMark(ctx);
        
        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        ctx.restore();
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –ø–æ–∑–Ω–∞—á–∫–∏ –≥—Ä–∞–≤—Ü—è (–∂–æ–≤—Ç–∏–π –∫—Ä—É–≥)
     * @param {CanvasRenderingContext2D} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
     */
    drawPlayerMark(ctx) {
        const markSize = 4;
        const centerX = this.x + this.width / 2;
        const centerY = this.y + this.height / 2;
        
        // –ú–∞–ª—é—î–º–æ –∂–æ–≤—Ç–∏–π –∫—Ä—É–≥
        ctx.fillStyle = '#f39c12';
        ctx.beginPath();
        ctx.arc(centerX, centerY, markSize, 0, 2 * Math.PI);
        ctx.fill();
    }
    
    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≥—Ä–∞–≤–µ—Ü—å –∂–∏–≤–∏–π
     * @returns {boolean} - true —è–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –∂–∏–≤–∏–π
     */
    isPlayerAlive() {
        return this.isTankAlive();
    }
    
    /**
     * –í–±–∏—Ç–∏ –≥—Ä–∞–≤—Ü—è
     */
    kill() {
        super.kill();
        logger.error('–ì—Ä–∞–≤–µ—Ü—å –≤–±–∏—Ç–∏–π!');
    }
    
    /**
     * –í—ñ–¥—Ä–æ–¥–∏—Ç–∏ –≥—Ä–∞–≤—Ü—è
     */
    respawn() {
        super.respawn();
        logger.success('–ì—Ä–∞–≤–µ—Ü—å –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–∏–π!');
    }
} 