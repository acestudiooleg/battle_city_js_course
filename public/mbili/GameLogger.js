/**
 * üéÆ –ö–ª–∞—Å GameLogger - —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –≥—Ä–∏
 *
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –ó–∞–ø–∏—Å –ø–æ–¥—ñ–π –≥—Ä–∏
 * - –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
 * - –†—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
 */

export class GameLogger {
  constructor() {
    // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–≥—ñ–≤ –≤ HTML
    this.logContainer = document.getElementById('logContent');
    // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ –≤ –ª–æ–∑—ñ
    this.maxEntries = 50;
  }

  /**
   * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –≤ –ª–æ–≥
   * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   * @param {string} type - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   * @param {string} details - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ
   */
  addLogEntry(message, type = 'info', details = '') {
    // –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
    const timestamp = new Date().toLocaleTimeString();
    // —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç div
    const entry = document.createElement('div');
    // –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ CSS –∫–ª–∞—Å
    entry.className = `game_log__entry game_log__entry--${type}`;

    // —Ñ–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∑ —á–∞—Å–æ–º
    let content = `[${timestamp}] ${message}`;
    if (details) {
      // –¥–æ–¥–∞—î–º–æ —ó—Ö –¥–æ —Ç–µ–∫—Å—Ç—É
      content += ` - ${details}`;
    }

    // –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –µ–ª–µ–º–µ–Ω—Ç–∞
    entry.textContent = content;

    if (!this.logContainer) {
      return;
    }

    // –¥–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Å–ø–∏—Å–∫—É
    this.logContainer.insertBefore(entry, this.logContainer.firstChild);

    // –≤–∏–¥–∞–ª—è—î–º–æ –∑–∞–π–≤—ñ –∑–∞–ø–∏—Å–∏ (—è–∫—â–æ —ó—Ö –±—ñ–ª—å—à–µ maxEntries)
    while (this.logContainer.children.length > this.maxEntries) {
      // –≤–∏–¥–∞–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç
      this.logContainer.removeChild(this.logContainer.lastChild);
    }

    // –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –≤–µ—Ä—Ö—É –ª–æ–≥—É
    this.logContainer.scrollTop = 0;
  }

  /**
   * –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–¥—ñ—è –≥—Ä–∏
   */
  gameEvent(message, details = '') {
    this.addLogEntry(message, 'game', details);
  }

  /**
   * –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   */
  info(message, details = '') {
    this.addLogEntry(message, 'info', details);
  }

  /**
   * –£—Å–ø—ñ—à–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è
   */
  success(message, details = '') {
    this.addLogEntry(message, 'success', details);
  }

  /**
   * –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
   */
  warning(message, details = '') {
    this.addLogEntry(message, 'warning', details);
  }

  /**
   * –ü–æ–º–∏–ª–∫–∞
   */
  error(message, details = '') {
    this.addLogEntry(message, 'error', details);
  }

  /**
   * –î—ñ—è –≥—Ä–∞–≤—Ü—è
   */
  playerAction(action, details = '') {
    this.addLogEntry(`üë§ ${action}`, 'player', details);
  }

  /**
   * –î—ñ—è –≤–æ—Ä–æ–≥–∞
   */
  enemyAction(action, details = '') {
    this.addLogEntry(`üëπ ${action}`, 'enemy', details);
  }
}
