import { darkGray, black, red } from './colors.js';

/**
 * üéÆ –ö–ª–∞—Å GameField - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –ú–∞–ª—é–≤–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏ –ø–æ–ª—è
 * - –§–æ–Ω —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
 * - –†–æ–∑–º—ñ—Ç–∫—É –∫–ª—ñ—Ç–∏–Ω–æ–∫
 * - –®—Ç–∞–± (–±–∞–∑—É)
 */

export class GameField {
    constructor(ctx, config, logger) {
        // –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
        this.ctx = ctx;
        // –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≥—Ä–∏
        this.config = config;
        // —Ä–æ–∑–º—ñ—Ä –∫–ª—ñ—Ç–∏–Ω–∫–∏
        this.tileSize = config.TILE_SIZE;
        // –ª–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å—É –ø–æ–¥—ñ–π
        this.logger = logger;
        
        // –ü–æ–∑–∏—Ü—ñ—è —à—Ç–∞–±—É
        this.base = {
            x: 400, // —Ü–µ–Ω—Ç—Ä –ø–æ–ª—è –ø–æ X
            y: 550, // –≤–Ω–∏–∑—É –ø–æ–ª—è –ø–æ Y
            width: 40,
            height: 40,
            isDestroyed: false
        };
        
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–Ü–≥—Ä–æ–≤–µ –ø–æ–ª–µ —Å—Ç–≤–æ—Ä–µ–Ω–µ');
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
     * @param {number} deltaTime - –ß–∞—Å –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    update(deltaTime) {
        // –ü–æ–∫–∏ —â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –æ–Ω–æ–≤–ª—é—î–º–æ
        // –í –º–∞–π–±—É—Ç–Ω—å–æ–º—É —Ç—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—è —Ñ–æ–Ω—É
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
     */
    render() {
        // –º–∞–ª—é—î–º–æ —Ñ–æ–Ω –ø–æ–ª—è
        this.drawBackground();
        // –º–∞–ª—é—î–º–æ —Å—ñ—Ç–∫—É –ø–æ–ª—è
        this.drawGrid();
        // –º–∞–ª—é—î–º–æ —à—Ç–∞–±
        this.drawBase();
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è —Ñ–æ–Ω—É –ø–æ–ª—è
     */
    drawBackground() {
        // –ú–∞–ª—é—î–º–æ —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω–∏–π —Ñ–æ–Ω
        // —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è —Ñ–æ–Ω—É
        this.ctx.fillStyle = black;
        // –∑–∞–ø–æ–≤–Ω—é—î–º–æ –≤–µ—Å—å Canvas
        this.ctx.fillRect(0, 0, this.config.CANVAS_WIDTH, this.config.CANVAS_HEIGHT);
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏ –ø–æ–ª—è
     */
    drawGrid() {
        // —Å–≤—ñ—Ç–ª–æ-–∑–µ–ª–µ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è –ª—ñ–Ω—ñ–π —Å—ñ—Ç–∫–∏
        this.ctx.strokeStyle = darkGray;
        // —Ç–æ–≤—â–∏–Ω–∞ –ª—ñ–Ω—ñ–π —Å—ñ—Ç–∫–∏
        this.ctx.lineWidth = 1;
        
        // –ø—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ–π —à–∏—Ä–∏–Ω—ñ –∑ –∫—Ä–æ–∫–æ–º tileSize
        for (let x = 0; x <= this.config.CANVAS_WIDTH; x += this.tileSize) {
            // –ø–æ—á–∏–Ω–∞—î–º–æ –º–∞–ª—é–≤–∞—Ç–∏ —à–ª—è—Ö
            this.ctx.beginPath();
            // –ø–æ—á–∞—Ç–∫–æ–≤–∞ —Ç–æ—á–∫–∞ (–≤–µ—Ä—Ö)
            this.ctx.moveTo(x, 0);
            // –∫—ñ–Ω—Ü–µ–≤–∞ —Ç–æ—á–∫–∞ (–Ω–∏–∑)
            this.ctx.lineTo(x, this.config.CANVAS_HEIGHT);
            // –º–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é
            this.ctx.stroke();
        }
        
        // –ø—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ–π –≤–∏—Å–æ—Ç—ñ –∑ –∫—Ä–æ–∫–æ–º tileSize
        for (let y = 0; y <= this.config.CANVAS_HEIGHT; y += this.tileSize) {
            // –ø–æ—á–∏–Ω–∞—î–º–æ –º–∞–ª—é–≤–∞—Ç–∏ —à–ª—è—Ö
            this.ctx.beginPath();
            // –ø–æ—á–∞—Ç–∫–æ–≤–∞ —Ç–æ—á–∫–∞ (–ª—ñ–≤–æ)
            this.ctx.moveTo(0, y);
            // –∫—ñ–Ω—Ü–µ–≤–∞ —Ç–æ—á–∫–∞ (–ø—Ä–∞–≤–æ)
            this.ctx.lineTo(this.config.CANVAS_WIDTH, y);
            // –º–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é
            this.ctx.stroke();
        }
    }

    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è —à—Ç–∞–±—É (–±–∞–∑–∏)
     */
    drawBase() {
        if (this.base.isDestroyed) return;

        // –ß–µ—Ä–≤–æ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è —à—Ç–∞–±—É
        this.ctx.fillStyle = red;
        
        // –ú–∞–ª—é—î–º–æ —à—Ç–∞–± —è–∫ –∫–≤–∞–¥—Ä–∞—Ç
        this.ctx.fillRect(
            this.base.x - this.base.width / 2,
            this.base.y - this.base.height / 2,
            this.base.width,
            this.base.height
        );

        // –ú–∞–ª—é—î–º–æ –æ–±–≤–µ–¥–µ–Ω–Ω—è —à—Ç–∞–±—É
        this.ctx.strokeStyle = 'white';
        this.ctx.lineWidth = 2;
        this.ctx.strokeRect(
            this.base.x - this.base.width / 2,
            this.base.y - this.base.height / 2,
            this.base.width,
            this.base.height
        );

        // –ú–∞–ª—é—î–º–æ —Ö—Ä–µ—Å—Ç–∏–∫ –Ω–∞ —à—Ç–∞–±—ñ
        this.ctx.strokeStyle = 'white';
        this.ctx.lineWidth = 3;
        
        // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è —Ö—Ä–µ—Å—Ç–∏–∫–∞
        this.ctx.beginPath();
        this.ctx.moveTo(this.base.x, this.base.y - 10);
        this.ctx.lineTo(this.base.x, this.base.y + 10);
        this.ctx.stroke();
        
        // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è —Ö—Ä–µ—Å—Ç–∏–∫–∞
        this.ctx.beginPath();
        this.ctx.moveTo(this.base.x - 10, this.base.y);
        this.ctx.lineTo(this.base.x + 10, this.base.y);
        this.ctx.stroke();
    }
    
    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ–∂ —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
     * @returns {Object} - –ú–µ–∂—ñ –ø–æ–ª—è
     */
    getBounds() {
        return {
            minX: 0,
            minY: 0,
            maxX: this.config.CANVAS_WIDTH,
            maxY: this.config.CANVAS_HEIGHT
        };
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —à—Ç–∞–±
     * @returns {Object} - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —à—Ç–∞–±
     */
    getBase() {
        return { ...this.base };
    }

    /**
     * –ó–Ω–∏—â–µ–Ω–Ω—è —à—Ç–∞–±—É
     */
    destroyBase() {
        this.base.isDestroyed = true;
        this.logger.gameEvent('–®—Ç–∞–± –∑–Ω–∏—â–µ–Ω–∏–π!');
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —à—Ç–∞–± –∑–Ω–∏—â–µ–Ω–∏–π
     * @returns {boolean} - true —è–∫—â–æ —à—Ç–∞–± –∑–Ω–∏—â–µ–Ω–∏–π
     */
    isBaseDestroyed() {
        return this.base.isDestroyed;
    }
}