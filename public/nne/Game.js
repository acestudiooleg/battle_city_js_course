import { canvas, ctx, GAME_CONFIG, logger } from './main.js';
import { Player } from './Player.js';
import { Enemy } from './Enemy.js';
import { GameField } from './GameField.js';
import { InputManager } from './InputManager.js';
import { CollisionManager } from './CollisionManager.js';
import { yellow, red } from './colors.js';

/**
 * üéÆ –ö–ª–∞—Å Game - –≥–æ–ª–æ–≤–Ω–∏–π –∫–ª–∞—Å –≥—Ä–∏
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –≤—Å—ñ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –≥—Ä–∏
 * - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —ñ–≥—Ä–æ–≤–∏–º —Ü–∏–∫–ª–æ–º
 * - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—é –º—ñ–∂ —Ä—ñ–∑–Ω–∏–º–∏ —á–∞—Å—Ç–∏–Ω–∞–º–∏ –≥—Ä–∏
 */

export class Game {
    constructor(logger) {
        // Canvas –µ–ª–µ–º–µ–Ω—Ç –∑ HTML
        this.canvas = canvas;
        // –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è
        this.ctx = ctx;
        // –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≥—Ä–∏
        this.config = GAME_CONFIG;
        // –ª–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å—É –ø–æ–¥—ñ–π
        this.logger = logger;
        
        // –≥—Ä–∞–≤–µ—Ü—å (–ø–æ–∫–∏ —â–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π)
        this.player = null;
        // –≤–æ—Ä–æ–≥ (–ø–æ–∫–∏ —â–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π)
        this.enemy = null;
        // —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ (–ø–æ–∫–∏ —â–æ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–µ)
        this.gameField = null;
        // —Å–∏—Å—Ç–µ–º–∞ –∫–µ—Ä—É–≤–∞–Ω–Ω—è
        this.inputManager = null;
        // —Å–∏—Å—Ç–µ–º–∞ –∫–æ–ª—ñ–∑—ñ–π
        this.collisionManager = null;
        
        // —á–∏ –∑–∞–ø—É—â–µ–Ω–∞ –≥—Ä–∞
        this.isRunning = false;
        // —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∫–∞–¥—Ä—É
        this.lastTime = 0;
    }
    
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏
     * –°—Ç–≤–æ—Ä—é—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –æ–±'—î–∫—Ç–∏
     */
    init() {
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏');
        
        // —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ
        this.gameField = new GameField(this.ctx, this.config, this.logger);
        
        // —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–∏—Å—Ç–µ–º—É –∫–µ—Ä—É–≤–∞–Ω–Ω—è
        this.inputManager = new InputManager(this.logger);
        
        // —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–∏—Å—Ç–µ–º—É –∫–æ–ª—ñ–∑—ñ–π
        this.collisionManager = new CollisionManager(this.logger);
        
        this.player = new Player({
            // –ø–æ–∑–∏—Ü—ñ—è X –≥—Ä–∞–≤—Ü—è
            x: 100,
            // –ø–æ–∑–∏—Ü—ñ—è Y –≥—Ä–∞–≤—Ü—è
            y: 100,
            // –∂–æ–≤—Ç–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è –≥—Ä–∞–≤—Ü—è
            color: yellow,
            // —Ä–æ–∑–º—ñ—Ä —Ç–∞–Ω–∫–∞
            size: this.config.TILE_SIZE
        }, this.logger);
        
        this.enemy = new Enemy({
            // –ø–æ–∑–∏—Ü—ñ—è X –≤–æ—Ä–æ–≥–∞
            x: 300,
            // –ø–æ–∑–∏—Ü—ñ—è Y –≤–æ—Ä–æ–≥–∞
            y: 200,
            // —á–µ—Ä–≤–æ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è –≤–æ—Ä–æ–≥–∞
            color: red,
            // —Ä–æ–∑–º—ñ—Ä —Ç–∞–Ω–∫–∞
            size: this.config.TILE_SIZE
        }, this.logger);
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º—É –∫–µ—Ä—É–≤–∞–Ω–Ω—è –¥–ª—è –≥—Ä–∞–≤—Ü—è
        this.player.setInputManager(this.inputManager);
        
        // –∑–∞–ø–∏—Å—É—î–º–æ —É—Å–ø—ñ—Ö –≤ –ª–æ–≥
        this.logger.success('–ì—Ä–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!');
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ –≥—Ä–∏
     */
    start() {
        // –ø–æ–∑–Ω–∞—á–∞—î–º–æ –≥—Ä—É —è–∫ –∑–∞–ø—É—â–µ–Ω—É
        this.isRunning = true;
        // –∑–∞–ø—É—Å–∫–∞—î–º–æ —ñ–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª
        this.gameLoop();
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–ì—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
    }
    
    /**
     * –ó—É–ø–∏–Ω–∫–∞ –≥—Ä–∏
     */
    stop() {
        // –ø–æ–∑–Ω–∞—á–∞—î–º–æ –≥—Ä—É —è–∫ –∑—É–ø–∏–Ω–µ–Ω—É
        this.isRunning = false;
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–ì—Ä–∞ –∑—É–ø–∏–Ω–µ–Ω–∞!');
    }
    
    /**
     * –ü–∞—É–∑–∞ –≥—Ä–∏
     */
    pause() {
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–ì—Ä–∞ –Ω–∞ –ø–∞—É–∑—ñ!');
    }
    
    /**
     * –ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –≥—Ä–∏
     */
    resume() {
        // –∑–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–≥
        this.logger.gameEvent('–ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–∞!');
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≥—Ä–∏
     * @param {number} deltaTime - –ß–∞—Å –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    update(deltaTime) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞ –Ω–∞ –ø–∞—É–∑—ñ
        if (this.inputManager.getGameState().isPaused) {
            return;
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞
        if (this.player.isGameOver()) {
            this.handleGameOver();
            return;
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —à—Ç–∞–± –∑–Ω–∏—â–µ–Ω–∏–π
        if (this.gameField.isBaseDestroyed()) {
            this.handleBaseDestroyed();
            return;
        }
        
        // –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –ø–æ–ª—è
        this.gameField.update(deltaTime);
        
        // –æ–Ω–æ–≤–ª—é—î–º–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü–µ–º (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –≤—ñ–¥—Ä–æ–¥–∂—É—î—Ç—å—Å—è)
        if (!this.player.isPlayerRespawning()) {
            this.updatePlayerInput();
        }
        
        // –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≥—Ä–∞–≤—Ü—è
        this.player.update(deltaTime);
        
        // –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≤–æ—Ä–æ–≥–∞
        this.enemy.update(deltaTime);
        
        // –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–ª—ñ–∑—ñ—ó (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –∂–∏–≤–∏–π —ñ –Ω–µ –≤—ñ–¥—Ä–æ–¥–∂—É—î—Ç—å—Å—è)
        if (this.player.isAlive && !this.player.isPlayerRespawning()) {
            this.collisionManager.checkAllCollisions({
                player: this.player,
                enemy: this.enemy,
                gameField: this.gameField
            });
        }
        
        // –û—á–∏—â–∞—î–º–æ –∫–ª–∞–≤—ñ—à—ñ, –Ω–∞—Ç–∏—Å–Ω—É—Ç—ñ –≤ —Ü—å–æ–º—É –∫–∞–¥—Ä—ñ
        this.inputManager.clearPressedThisFrame();
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü–µ–º
     */
    updatePlayerInput() {
        // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–ø—Ä—è–º–æ–∫ —Ä—É—Ö—É
        const movement = this.inputManager.getMovementDirection();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä—É—Ö –≥—Ä–∞–≤—Ü—è
        this.player.setMovement(movement);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—ñ–ª—å–±—É
        if (this.inputManager.isShootPressed()) {
            this.player.shoot();
        }
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –≥—Ä–∏
     */
    render() {
        // –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å–µ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –º–∞–ª—é–≤–∞–Ω–Ω—è
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        
        // –º–∞–ª—é—î–º–æ —Ñ–æ–Ω —Ç–∞ —Å—ñ—Ç–∫—É
        this.gameField.render();
        
        // –º–∞–ª—é—î–º–æ –∂–æ–≤—Ç–∏–π —Ç–∞–Ω–∫ –≥—Ä–∞–≤—Ü—è
        this.player.render(this.ctx);
        
        // –º–∞–ª—é—î–º–æ —á–µ—Ä–≤–æ–Ω–∏–π —Ç–∞–Ω–∫ –≤–æ—Ä–æ–≥–∞
        this.enemy.render(this.ctx);
        
        // –º–∞–ª—é—î–º–æ –∫—É–ª—ñ –≥—Ä–∞–≤—Ü—è
        this.player.renderBullets(this.ctx);
        
        // –º–∞–ª—é—î–º–æ –∫—É–ª—ñ –≤–æ—Ä–æ–≥–∞
        this.enemy.renderBullets(this.ctx);
        
        // –º–∞–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∂–∏—Ç—Ç—è
        this.renderLivesInfo();
        
        // –º–∞–ª—é—î–º–æ –µ–∫—Ä–∞–Ω –∫—ñ–Ω—Ü—è –≥—Ä–∏
        if (this.player.isGameOver() || this.gameField.isBaseDestroyed()) {
            this.renderGameOverScreen();
        }
    }
    
    /**
     * –ì–æ–ª–æ–≤–Ω–∏–π —ñ–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª
     * @param {number} currentTime - –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
     */
    gameLoop(currentTime = 0) {
        // —è–∫—â–æ –≥—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞, –≤–∏—Ö–æ–¥–∏–º–æ
        if (!this.isRunning) return;
        
        // —Ä—ñ–∑–Ω–∏—Ü—è —á–∞—Å—É –º—ñ–∂ –∫–∞–¥—Ä–∞–º–∏
        const deltaTime = currentTime - this.lastTime;
        // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
        this.lastTime = currentTime;
        
        // –æ–Ω–æ–≤–ª—é—î–º–æ –≤—Å—ñ –æ–±'—î–∫—Ç–∏ –≥—Ä–∏
        this.update(deltaTime);
        
        // –º–∞–ª—é—î–º–æ –≤—Å–µ –Ω–∞ Canvas
        this.render();
        
        // –ø–ª–∞–Ω—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫–∞–¥—Ä
        requestAnimationFrame((time) => this.gameLoop(time));
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –∫—ñ–Ω—Ü—è –≥—Ä–∏
     */
    handleGameOver() {
        // –ó—É–ø–∏–Ω—è—î–º–æ –≥—Ä—É
        this.stop();
        this.logger.gameEvent('üéÆ –ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞!');
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –∑–Ω–∏—â–µ–Ω–Ω—è —à—Ç–∞–±—É
     */
    handleBaseDestroyed() {
        // –ó—É–ø–∏–Ω—è—î–º–æ –≥—Ä—É
        this.stop();
        this.logger.gameEvent('üí• –®—Ç–∞–± –∑–Ω–∏—â–µ–Ω–∏–π! –ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞!');
    }

    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∂–∏—Ç—Ç—è
     */
    renderLivesInfo() {
        const lives = this.player.getLives();
        const maxLives = this.player.getMaxLives();
        
        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
        this.ctx.fillStyle = 'white';
        this.ctx.font = '16px Arial';
        this.ctx.textAlign = 'left';
        
        // –ú–∞–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∂–∏—Ç—Ç—ñ–≤
        this.ctx.fillText(`–ñ–∏—Ç—Ç—è: ${lives}/${maxLives}`, 10, 30);
        
        // –ú–∞–ª—é—î–º–æ —Å–µ—Ä—Ü—è
        const heartSize = 20;
        const heartSpacing = 25;
        const startX = 10;
        const startY = 50;
        
        for (let i = 0; i < maxLives; i++) {
            const heartX = startX + i * heartSpacing;
            const heartY = startY;
            
            if (i < lives) {
                // –ñ–∏–≤–µ —Å–µ—Ä—Ü–µ (—á–µ—Ä–≤–æ–Ω–µ)
                this.ctx.fillStyle = 'red';
            } else {
                // –ú–µ—Ä—Ç–≤–µ —Å–µ—Ä—Ü–µ (—Å—ñ—Ä–µ)
                this.ctx.fillStyle = 'gray';
            }
            
            // –ú–∞–ª—é—î–º–æ –ø—Ä–æ—Å—Ç–µ —Å–µ—Ä—Ü–µ —è–∫ –∫–æ–ª–æ
            this.ctx.beginPath();
            this.ctx.arc(heartX + heartSize/2, heartY + heartSize/2, heartSize/2, 0, 2 * Math.PI);
            this.ctx.fill();
        }
    }

    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –µ–∫—Ä–∞–Ω—É –∫—ñ–Ω—Ü—è –≥—Ä–∏
     */
    renderGameOverScreen() {
        // –ù–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —á–æ—Ä–Ω–∏–π —Ñ–æ–Ω
        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';
        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);
        
        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
        this.ctx.fillStyle = 'white';
        this.ctx.font = '48px Arial';
        this.ctx.textAlign = 'center';
        
        // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø—Ä–∏—á–∏–Ω—É –∫—ñ–Ω—Ü—è –≥—Ä–∏
        let title = '–ì–†–ê –ó–ê–ö–Ü–ù–ß–ï–ù–ê';
        let subtitle = '';
        
        if (this.gameField.isBaseDestroyed()) {
            title = '–®–¢–ê–ë –ó–ù–ò–©–ï–ù–û!';
            subtitle = '–í–æ—Ä–æ–≥ –¥–æ—Å—è–≥ –±–∞–∑–∏';
        } else if (this.player.isGameOver()) {
            title = '–ì–†–ê –ó–ê–ö–Ü–ù–ß–ï–ù–ê';
            subtitle = '–£ –≥—Ä–∞–≤—Ü—è –Ω–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—å –∂–∏—Ç—Ç—ñ–≤';
        }
        
        // –ú–∞–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        this.ctx.fillText(title, this.canvas.width / 2, this.canvas.height / 2 - 50);
        
        // –ú–∞–ª—é—î–º–æ –ø—ñ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        if (subtitle) {
            this.ctx.font = '24px Arial';
            this.ctx.fillText(subtitle, this.canvas.width / 2, this.canvas.height / 2);
        }
        
        // –ú–µ–Ω—à–∏–π —Ç–µ–∫—Å—Ç
        this.ctx.font = '20px Arial';
        this.ctx.fillText('–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å F5 –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É', this.canvas.width / 2, this.canvas.height / 2 + 50);
    }
}