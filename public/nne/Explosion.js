/**
 * üí• –ö–ª–∞—Å Explosion - –∞–Ω—ñ–º–∞—Ü—ñ—è –≤–∏–±—É—Ö—É
 * 
 * –°—Ç–≤–æ—Ä—é—î –µ—Ñ–µ–∫—Ç –≤–∏–±—É—Ö—É –∑ —á–∞—Å—Ç–∏–Ω–∫–∞–º–∏, —è–∫—ñ —Ä–æ–∑–ª—ñ—Ç–∞—é—Ç—å—Å—è –≤ —Ä—ñ–∑–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏
 */

export class Explosion {
    constructor(x, y, size = 20, logger = null) {
        this.x = x;
        this.y = y;
        this.size = size;
        this.particles = [];
        this.isActive = true;
        this.duration = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞
        this.age = 0;
        this.logger = logger;
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ —á–∞—Å—Ç–∏–Ω–∫–∏ –≤–∏–±—É—Ö—É
        this.createParticles();
        
        if (this.logger) {
            this.logger.gameEvent('–í–∏–±—É—Ö —Å—Ç–≤–æ—Ä–µ–Ω–∏–π', { x, y, size });
        }
        
        console.log('üí• –í–∏–±—É—Ö —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –≤ –ø–æ–∑–∏—Ü—ñ—ó:', x, y);
    }
    
    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∞—Å—Ç–∏–Ω–æ–∫ –¥–ª—è –≤–∏–±—É—Ö—É
     */
    createParticles() {
        const particleCount = 8; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å —á–∞—Å—Ç–∏–Ω–æ–∫
        
        for (let i = 0; i < particleCount; i++) {
            // –í–∏–ø–∞–¥–∫–æ–≤–∏–π –∫—É—Ç –¥–ª—è –Ω–∞–ø—Ä—è–º–∫—É —á–∞—Å—Ç–∏–Ω–∫–∏
            const angle = (i / particleCount) * Math.PI * 2;
            
            // –í–∏–ø–∞–¥–∫–æ–≤–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å
            const speed = 2 + Math.random() * 3;
            
            // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä —á–∞—Å—Ç–∏–Ω–∫–∏
            const particleSize = 3 + Math.random() * 4;
            
            // –í–∏–ø–∞–¥–∫–æ–≤–∏–π –∫–æ–ª—ñ—Ä (–≤—ñ–¥ –∂–æ–≤—Ç–æ–≥–æ –¥–æ —á–µ—Ä–≤–æ–Ω–æ–≥–æ)
            const colors = ['#f39c12', '#e67e22', '#e74c3c', '#f1c40f'];
            const color = colors[Math.floor(Math.random() * colors.length)];
            
            this.particles.push({
                x: this.x,
                y: this.y,
                vx: Math.cos(angle) * speed, // –®–≤–∏–¥–∫—ñ—Å—Ç—å –ø–æ X
                vy: Math.sin(angle) * speed, // –®–≤–∏–¥–∫—ñ—Å—Ç—å –ø–æ Y
                size: particleSize,
                color: color,
                life: 1.0, // –ñ–∏—Ç—Ç—è —á–∞—Å—Ç–∏–Ω–∫–∏ (–≤—ñ–¥ 1 –¥–æ 0)
                decay: 0.02 + Math.random() * 0.03 // –®–≤–∏–¥–∫—ñ—Å—Ç—å –∑–≥–∞—Å–∞–Ω–Ω—è
            });
        }
    }
    
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–±—É—Ö—É
     */
    update(deltaTime) {
        if (!this.isActive) return;
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∂–∏—Ç—Ç—è –≤–∏–±—É—Ö—É
        this.age += deltaTime;
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∏–±—É—Ö –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è
        if (this.age >= this.duration) {
            this.isActive = false;
            return;
        }
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–∂–Ω—É —á–∞—Å—Ç–∏–Ω–∫—É
        this.particles.forEach(particle => {
            // –†—É—Ö–∞—î–º–æ —á–∞—Å—Ç–∏–Ω–∫—É
            particle.x += particle.vx;
            particle.y += particle.vy;
            
            // –ó–º–µ–Ω—à—É—î–º–æ –∂–∏—Ç—Ç—è —á–∞—Å—Ç–∏–Ω–∫–∏
            particle.life -= particle.decay;
            
            // –ó–º–µ–Ω—à—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —á–∞—Å—Ç–∏–Ω–∫–∏
            particle.size *= 0.98;
        });
        
        // –í–∏–¥–∞–ª—è—î–º–æ —á–∞—Å—Ç–∏–Ω–∫–∏ –∑ –Ω—É–ª—å–æ–≤–∏–º –∂–∏—Ç—Ç—è–º
        this.particles = this.particles.filter(particle => particle.life > 0);
        
        // –Ø–∫—â–æ –≤—Å—ñ —á–∞—Å—Ç–∏–Ω–∫–∏ –∑–Ω–∏–∫–ª–∏, –¥–µ–∞–∫—Ç–∏–≤—É—î–º–æ –≤–∏–±—É—Ö
        if (this.particles.length === 0) {
            this.isActive = false;
        }
    }
    
    /**
     * –ú–∞–ª—é–≤–∞–Ω–Ω—è –≤–∏–±—É—Ö—É
     */
    render(ctx) {
        if (!this.isActive) return;
        
        ctx.save();
        
        // –ú–∞–ª—é—î–º–æ –∫–æ–∂–Ω—É —á–∞—Å—Ç–∏–Ω–∫—É
        this.particles.forEach(particle => {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–ª—ñ—Ä –∑ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—é
            const alpha = particle.life;
            ctx.globalAlpha = alpha;
            ctx.fillStyle = particle.color;
            
            // –ú–∞–ª—é—î–º–æ —á–∞—Å—Ç–∏–Ω–∫—É —è–∫ –∫–æ–ª–æ
            ctx.beginPath();
            ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
            ctx.fill();
            
            // –î–æ–¥–∞—î–º–æ —Å–≤—ñ—Ç—ñ–Ω–Ω—è
            ctx.shadowColor = particle.color;
            ctx.shadowBlur = particle.size * 2;
            ctx.fill();
            ctx.shadowBlur = 0;
        });
        
        ctx.restore();
    }
    
    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∏–±—É—Ö –∞–∫—Ç–∏–≤–Ω–∏–π
     */
    isExplosionActive() {
        return this.isActive;
    }
}
